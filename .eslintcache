[{"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\compresor-imagen\\src\\index.js":"1","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\compresor-imagen\\src\\App.js":"2","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\compresor-imagen\\src\\reportWebVitals.js":"3"},{"size":751,"mtime":1612221910470,"results":"4","hashOfConfig":"5"},{"size":5770,"mtime":1612222432550,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1mkhi25",{"filePath":"11","messages":"12","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\compresor-imagen\\src\\index.js",[],["16","17"],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\compresor-imagen\\src\\App.js",["18","19","20","21","22","23"],"import { useState } from \"react\";\nimport \"./App.css\";\nimport imageCompression from \"browser-image-compression\";\nimport icon from './assets/imagen.png';\nimport icon1 from './assets/logogithub.png';\nimport foto from './assets/foto.png';\nfunction App() {\n\n  const [origImage, setOrigImage] = useState(\"\");\n  const [origImageFile, setOrigImageFile] = useState(\"\");\n  const [compressedImage, setCompressedImage] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  const handle = (e) => {\n    const imageFile = e.target.files[0];\n    setOrigImage(imageFile);\n    setOrigImageFile(URL.createObjectURL(imageFile));\n    setFileName(imageFile.name);\n  };\n\n  const handleCompressImage = (e) => {\n\n    e.preventDefault();\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n\n    };\n    if (options.maxSizeMB >= origImage / 1024) {\n      alert(\"Image is too small, cant be compressed\");\n      return 0;\n    }\n    let output;\n    imageCompression(origImage, options).then((x) => {\n      output = x;\n      const downloadLink = URL.createObjectURL(output);\n      setCompressedImage(downloadLink);\n    });\n  };\n  return (\n    <>\n\n      <nav className=\"navbar navbar-light bg-success sticky-top\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand text-white\" href=\"https://pedromanueljm.github.io/COMPRIMIR_IMAGEN/#/\">\n            <img src={icon} alt=\"\" className=\"d-inline-block align-top\" />\n           . Compressor Image\n        </a>\n        </div>\n      </nav>\n\n      <div className=\"container\">\n        <br /><br /><br />\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n          <div className=\"col\">\n            <div className=\"card\">\n              {origImageFile ? (\n                <img src={origImageFile} className=\"\" />\n              ) : (\n                  <img src={foto} />\n                )}\n            </div>\n            <div className=\"padding\"></div>\n            <div className=\"container\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"mt-2 btn btn-dark w-100\"\n                onChange={(e) => handle(e)}\n              />\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"card-body\">\n              <div className=\"container text-center\">\n                {origImageFile && (\n                  <button className=\"btn btn-info\"\n                    onClick={(e) => {\n                      handleCompressImage(e);\n                    }}\n                  >\n                    {\" \"}\n                Comprimir Imagen\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"card\">\n              {compressedImage ? (\n                <img src={compressedImage}></img>\n              ) : (\n                  <img src={foto}></img>\n\n                )}\n            </div>\n            <div className=\"padding\"></div>\n            <div className=\"container text-center\">\n              {compressedImage && (\n                <button className=\"btn btn-success\">\n                  <a href={compressedImage} download={fileName} className=\"text-white\" >\n                    {\" \"}\n                  Descargar Imagen\n                </a>\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n     <div className=\"separar\"></div>\n      <footer id=\"footer\" className=\"padded bg-success\">\n                    <div className=\"container\">\n                         <br></br>\n                        <h6 className=\"text-center text-white\"> 2021 - Todos los derechos reservados </h6>\n                        <div className=\"col text-center\">\n                            <h4 id=\"name\" className=\"text-center text-white\" >\n                                <span> P</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">d</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">o</span> \n                                <span> M</span><span className=\"name_animation transparent\">a</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">u</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">l</span>\n                                <span> A</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">t</span><span className=\"name_animation transparent\">o</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">i</span><span className=\"name_animation transparent\">o</span>\n                                <span> J</span><span className=\"name_animation transparent\">u</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">a</span><span className=\"name_animation transparent\">d</span><span className=\"name_animation transparent\">o</span>\n                                <span> M</span><span className=\"name_animation transparent\">o</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">o </span>\n                                <a href=\"https://github.com/PedroManuelJM\" target=\"_blank\"><img id=\"logo-github\" src={icon1} className=\"size:32px;\"/></a>\n                            </h4>    \n                        </div>\n                    </div>\n                  <br></br>\n      </footer>\n      \n    </>\n  );\n\n}\n\nexport default App;\n\n","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\compresor-imagen\\src\\reportWebVitals.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":59,"column":17,"nodeType":"30","endLine":59,"endColumn":57},{"ruleId":"28","severity":1,"message":"29","line":61,"column":19,"nodeType":"30","endLine":61,"endColumn":37},{"ruleId":"28","severity":1,"message":"29","line":93,"column":17,"nodeType":"30","endLine":93,"endColumn":44},{"ruleId":"28","severity":1,"message":"29","line":95,"column":19,"nodeType":"30","endLine":95,"endColumn":35},{"ruleId":"31","severity":1,"message":"32","line":125,"column":33,"nodeType":"30","endLine":125,"endColumn":92},{"ruleId":"28","severity":1,"message":"29","line":125,"column":92,"nodeType":"30","endLine":125,"endColumn":150},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]